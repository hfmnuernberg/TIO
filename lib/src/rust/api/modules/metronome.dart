// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.7.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `audio_out_thread_handle_command`, `on_audio_callback`
// These types are ignored because they are not used by any `pub` functions: `BEAT_EVENT_HAPPENED`, `BEAT_MUTE_CHANCE`, `BPM`, `CURRENTLY_PLAYING_BUFFERS`, `CommandMetro`, `LOADED_AUDIO_BUFFERS`, `MUTED`, `RHYTHM_2`, `RHYTHM`, `THREAD_SENDER`, `THREAD`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `deref`, `deref`, `deref`, `deref`, `deref`, `deref`, `deref`, `deref`, `deref`, `deref`, `fmt`, `initialize`, `initialize`, `initialize`, `initialize`, `initialize`, `initialize`, `initialize`, `initialize`, `initialize`, `initialize`
// These functions are ignored (category: IgnoreBecauseExplicitAttribute): `metronome_create_audio_stream`, `metronome_get_beat_event`, `metronome_load_audio_buffer`, `metronome_set_audio_muted`, `metronome_set_new_bpm`, `metronome_set_new_mute_chance`, `metronome_set_new_volume`, `metronome_set_rhythm_from_bars`, `metronome_trigger_destroy_stream`

class BeatHappenedEvent {
  final int millisecondsBeforeStart;
  final bool isRandomMute;
  final int barIndex;
  final bool isPoly;
  final bool isSecondary;
  final int beatIndex;
  final PlatformInt64 timestamp;

  const BeatHappenedEvent({
    required this.millisecondsBeforeStart,
    required this.isRandomMute,
    required this.barIndex,
    required this.isPoly,
    required this.isSecondary,
    required this.beatIndex,
    required this.timestamp,
  });

  @override
  int get hashCode =>
      millisecondsBeforeStart.hashCode ^
      isRandomMute.hashCode ^
      barIndex.hashCode ^
      isPoly.hashCode ^
      isSecondary.hashCode ^
      beatIndex.hashCode ^
      timestamp.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is BeatHappenedEvent &&
          runtimeType == other.runtimeType &&
          millisecondsBeforeStart == other.millisecondsBeforeStart &&
          isRandomMute == other.isRandomMute &&
          barIndex == other.barIndex &&
          isPoly == other.isPoly &&
          isSecondary == other.isSecondary &&
          beatIndex == other.beatIndex &&
          timestamp == other.timestamp;
}
