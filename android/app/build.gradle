plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '0.0.1'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (!keystorePropertiesFile.exists()) {
    keystorePropertiesFile = rootProject.file('key.properties.debug')
}
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 35
    ndkVersion "26.3.11579264"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }

    defaultConfig {
        applicationId "com.studiofluffy.tonica"
        minSdkVersion 31
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'] ? keystoreProperties['storeFile'] : System.getenv('ANDROID_KEYSTORE_STORE_FILE'))
            storePassword keystoreProperties['storePassword'] ? keystoreProperties['storePassword'] : System.getenv('ANDROID_KEYSTORE_STORE_PASSWORD')
            keyAlias keystoreProperties['keyAlias'] ? keystoreProperties['keyAlias'] : System.getenv('ANDROID_KEYSTORE_KEY_ALIAS')
            keyPassword keystoreProperties['keyPassword'] ? keystoreProperties['keyPassword'] : System.getenv('ANDROID_KEYSTORE_KEY_PASSWORD')
        }
        debug {
            storeFile file(keystoreProperties['storeFile'] ? keystoreProperties['storeFile'] : System.getenv('ANDROID_KEYSTORE_STORE_FILE'))
            storePassword keystoreProperties['storePassword'] ? keystoreProperties['storePassword'] : System.getenv('ANDROID_KEYSTORE_STORE_PASSWORD')
            keyAlias keystoreProperties['keyAlias'] ? keystoreProperties['keyAlias'] : System.getenv('ANDROID_KEYSTORE_KEY_ALIAS')
            keyPassword keystoreProperties['keyPassword'] ? keystoreProperties['keyPassword'] : System.getenv('ANDROID_KEYSTORE_KEY_PASSWORD')
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release

            ndk {
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
            }
        }
        debug {
            signingConfig signingConfigs.debug

            ndk {
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
            }
        }
    }
    namespace 'com.studiofluffy.tonica'
}

flutter {
    source '../..'
}

[
        Debug: null,
        Profile: '--release',
        Release: '--release'
].each {
    def taskPostfix = it.key
    def profileMode = it.value
    tasks.whenTaskAdded { task ->
        if (task.name == "javaPreCompile$taskPostfix") {
            task.dependsOn "cargoBuild$taskPostfix"
        }
    }
    tasks.register("cargoBuild$taskPostfix", Exec) {
        workingDir "../../rust"
        commandLine 'cargo',
                'ndk',
                '-t', 'armeabi-v7a',
                '-t', 'arm64-v8a',
                '-t', 'x86',
                '-t', 'x86_64',
                '-o', '../android/app/src/main/jniLibs',
                'build'
        if (profileMode != null) {
            args profileMode
        }
    }
}
