name: Release

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Commit SHA, tag, or branch to create version for (optional, defaults to main)'
        required: false
        type: string

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
    - name: Set fallback ref
      id: ref
      run: |
        REF_INPUT="${{ github.event.inputs.ref }}"
        if [[ -z "$REF_INPUT" ]]; then
          echo "ref=main" >> "$GITHUB_OUTPUT"
        else
          echo "ref=$REF_INPUT" >> "$GITHUB_OUTPUT"
        fi

    - name: Show resolved ref
      run: echo "Using ref ${{ steps.ref.outputs.ref }}"

    - name: Checkout repository
      uses: actions/checkout@v4.2.2
      with:
        ref: main
        fetch-depth: 0

    - name: Checkout repository
      uses: actions/checkout@v4.2.2
      run: git checkout ${{ steps.ref.outputs.ref }}

    - name: Make scripts executable
      run: chmod +x scripts/*.sh

    - name: Create GitHub release
      id: semantic_release
      uses: cycjimmy/semantic-release-action@v4.2.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Assert new release created
      if: steps.semantic_release.outputs.new_release_published == 'false'
      run: |
        echo "❌ No new release created! See workflow logs for details." >> $GITHUB_STEP_SUMMARY
        exit 1

    - name: Load current build number
      if: steps.semantic_release.outputs.new_release_published == 'true'
      id: old
      run: |
        source scripts/load-version-from-latest-tag.sh
        echo "buildNumber=$BUILD_NUMBER" >> "$GITHUB_OUTPUT"

    - name: Bump SemVer
      if: steps.semantic_release.outputs.new_release_published == 'true'
      id: new
      run: |
        source scripts/bump-semver-and-tag.sh \
          ${{ steps.semantic_release.outputs.new_release_version }} \
          ${{ steps.old.outputs.buildNumber }}
        echo "semver=$NEW_SEMVER" >> "$GITHUB_OUTPUT"

    - name: Create summary
      if: steps.semantic_release.outputs.new_release_published == 'true'
      run: |
        echo "New Release: **${{ steps.semantic_release.outputs.new_release_version }}**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Next SemVer: **${{ steps.new.outputs.semver }}**" >> $GITHUB_STEP_SUMMARY
