name: Upload Android App

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        description: The commit SHA, tag or release
      version:
        required: true
        type: string
        description: The version
      googlePlayStoreUrl:
        required: true
        type: string
        description: The google play store URL

concurrency:
  group: android-${{ inputs.version }}
  cancel-in-progress: true

jobs:
  upload-android-app:
    name: Upload Android App
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: production
    permissions:
      deployments: write
      id-token: write
      contents: read
    env:
      GOOGLE_PLAY_STORE_URL: ${{ inputs.googlePlayStoreUrl }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.2
      with:
        ref: ${{ inputs.ref }}

    - name: Restore bundle
      uses: actions/download-artifact@v4.3.0
      with:
        name: android-${{ inputs.version }}
        path: build/app/outputs/bundle/release

    - name: Setup ruby
      uses: ruby/setup-ruby@v1.238.0
      with:
        ruby-version: '3.3'
        working-directory: android
        bundler-cache: true

    - name: Create GitHub deployment
      uses: chrnorm/deployment-action@v2.0.7
      id: deployment
      with:
        token: '${{ github.token }}'
        environment-url: ${{ env.GOOGLE_PLAY_STORE_URL }}
        environment: production

    - name: Decrypt service-account.json file
      uses: timheuer/base64-to-file@v1.2.4
      with:
        fileName: 'service_account.json'
        fileDir: './android'
        encodedString: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}

    - name: Prepare version
      run: scripts/set-version-in-pubspec.sh ${{ inputs.version }}

    - name: Upload bundle
      uses: maierj/fastlane-action@v3.1.0
      with:
        lane: push_to_store
        subdirectory: android

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@v2.0.3
      with:
        token: '${{ github.token }}'
        environment-url: ${{ env.GOOGLE_PLAY_STORE_URL }}
        state: 'success'
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@v2.0.3
      with:
        token: '${{ github.token }}'
        environment-url: ${{ env.GOOGLE_PLAY_STORE_URL }}
        state: 'failure'
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}
