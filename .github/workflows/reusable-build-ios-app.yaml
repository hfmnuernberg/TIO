name: Build iOS App

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        description: The commit SHA, tag or release
      semver:
        required: true
        type: string
        description: The semantic version to use (e.g., 1.2.3)
      build_number:
        required: true
        type: string
        description: The build number to use (e.g., 456)
      target_env:
        required: true
        type: string
        description: The target environment to build for (e.g. dev, prd)

jobs:
  build-ios-app:
    name: Build iOS App
    runs-on: macos-14
    timeout-minutes: 20
    environment: ${{ inputs.target_env }}
    env:
      APPLE_DEVELOPER_TEAM_ID: ${{ vars.APPLE_DEVELOPER_TEAM_ID }}
      MATCH_PASSWORD: ${{ secrets.FASTLANE_GITHUB_MATCH_STORAGE_PASSWORD }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v5.0.0
      with:
        ref: ${{ inputs.ref }}

    - name: Make scripts executable
      run: chmod +x scripts/*.sh

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1.6.0
      with:
        xcode-version: 16.2.0

    - name: Show Xcode version
      run: xcodebuild -version

    - name: Show available iOS SDKs
      run: xcodebuild -showsdks

    - name: Setup flutter
      uses: kuhnroyal/flutter-fvm-config-action/setup@v3.1

    - name: Install key for fastlane repo
      uses: webfactory/ssh-agent@v0.9.1
      with:
        ssh-private-key: |
          ${{ secrets.FASTLANE_GITHUB_DEPLOY_PRIVATE_KEY }}

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1.14.1
      with:
        toolchain: 1.89.0
        components: rustfmt, clippy

    - name: Install Flutter dependencies
      run: scripts/app.sh install:flutter:packages

    - name: Install Rust dependencies
      run: scripts/app.sh install:rust:packages

    - name: Install Flutter/Dart<->Rust binding generator
      run: scripts/app.sh install:rust:frb

    - name: Generate Rust TIO music library
      run: scripts/app.sh generate:rust

    - name: Generate splash image assets
      run: scripts/app.sh generate:splash

    - name: Generate launcher icons
      run: scripts/app.sh generate:icon

    - name: Generate json *.g.dart files
      run: scripts/app.sh generate:json

    - name: Setup ruby
      uses: ruby/setup-ruby@v1.257.0
      with:
        ruby-version: 3.3
        working-directory: ios
        bundler-cache: true

    - name: Install certs
      uses: maierj/fastlane-action@v3.1.0
      with:
        lane: ${{ inputs.target_env }}_get_certs_and_profiles
        subdirectory: ios

    - name: Prepare version
      run: scripts/set-version-in-pubspec.sh "${{ inputs.semver }}+${{ inputs.build_number }}"

    - name: Build bundle
      run: scripts/app.sh build ios ${{ inputs.target_env }} ${{ inputs.target_env }} release

    - name: Save bundle
      uses: actions/upload-artifact@v4.6.2
      with:
        name: ios-${{ inputs.target_env }}-${{ inputs.semver }}+${{ inputs.build_number }}
        path: build/ios/ipa
        retention-days: 1
        if-no-files-found: error
