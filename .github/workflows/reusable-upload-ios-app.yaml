name: Upload iOS App

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        description: The commit SHA, tag or release to verify
      artifactName:
        required: true
        type: string
        description: The name of the artifact to upload
      appIdentifier:
        required: true
        type: string
        description: The ID of the app to build

concurrency:
  group: ${{ inputs.artifactName }}
  cancel-in-progress: true

jobs:
  upload-ios-app:
    runs-on: macos-latest
    timeout-minutes: 20
    environment: production
    permissions:
      deployments: write
      id-token: write
      contents: read
    env:
      APPLE_APP_STORE_CONNECT_API_KEY_ID: '${{ vars.APPLE_APP_STORE_CONNECT_API_KEY_ID }}'
      APPLE_APP_STORE_CONNECT_API_ISSUER_ID: '${{ vars.APPLE_APP_STORE_CONNECT_API_ISSUER_ID }}'
      APPLE_APP_STORE_CONNECT_API_KEY_SECRET: '${{ secrets.APPLE_APP_STORE_CONNECT_API_KEY_SECRET }}'
      APPLE_APP_STORE_URL: 'https://testflight.apple.com/v1/app/${{ inputs.appIdentifier }}'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0

      - name: Restore bundle
        uses: actions/download-artifact@v4.1.9
        with:
          name: ${{ inputs.artifactName }}
          path: build/ios/ipa

      - name: Setup ruby
        uses: ruby/setup-ruby@v1.225.0
        with:
          ruby-version: '3.3'
          working-directory: ios
          bundler-cache: true

      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@v2.0.7
        id: deployment
        with:
          token: '${{ github.token }}'
          environment-url: ${{ env.APPLE_APP_STORE_URL }}
          environment: production

      - name: Prepare version
        run: scripts/update-version-and-build-number-in-pubspec-with-latest-tag.sh

      - name: Upload bundle
        uses: maierj/fastlane-action@v3.1.0
        with:
          lane: push_to_store
          subdirectory: ios

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2.0.3
        with:
          token: '${{ github.token }}'
          environment-url: ${{ env.APPLE_APP_STORE_URL }}
          state: 'success'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2.0.3
        with:
          token: '${{ github.token }}'
          environment-url: ${{ env.APPLE_APP_STORE_URL }}
          state: 'failure'
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
