name: Build Android App

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        description: The commit SHA, tag or release
      semver:
        required: true
        type: string
        description: The semantic version to use (e.g., 1.2.3)
      build_number:
        required: true
        type: string
        description: The build number to use (e.g., 456)
      target_env:
        required: true
        type: string
        description: The target environment to build for (e.g. dev, prd)

jobs:
  build-android-app:
    name: Build Android App
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: ${{ inputs.target_env }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v5.0.0
      with:
        ref: ${{ inputs.ref }}

    - name: Make scripts executable
      run: chmod +x scripts/*.sh

    - name: Setup Java
      uses: actions/setup-java@v5.0.0
      with:
        java-version: 21
        distribution: temurin

    - name: Setup Flutter
      uses: kuhnroyal/flutter-fvm-config-action/setup@v3.1

    - name: Setup NDK
      id: setup_ndk
      uses: nttld/setup-ndk@v1.5.0
      with:
        ndk-version: r27d

    - name: Install ALSA dev libraries
      run: sudo apt-get update && sudo apt-get install -y libasound2-dev

    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1.15.2
      with:
        toolchain: 1.89.0
        components: rustfmt, clippy

    - name: Install Rust targets
      run: scripts/app.sh install:rust:targets

    - name: Install Flutter dependencies
      run: scripts/app.sh install:flutter:packages

    - name: Install Rust dependencies
      run: scripts/app.sh install:rust:packages

    - name: Install Flutter/Dart<->Rust binding generator
      run: scripts/app.sh install:rust:frb

    - name: Generate Rust TIO music library
      run: scripts/app.sh generate:rust

    - name: Generate splash image assets
      run: scripts/app.sh generate:splash

    - name: Generate launcher icons
      run: scripts/app.sh generate:icon

    - name: Generate json *.g.dart files
      run: scripts/app.sh generate:json

    - name: Setup ruby
      uses: ruby/setup-ruby@v1.266.0
      with:
        ruby-version: 3.3
        working-directory: android
        bundler-cache: true

    - name: Decrypt keystore file
      uses: timheuer/base64-to-file@v1.2.4
      with:
        fileName: release.keystore
        fileDir: ./android/app
        encodedString: ${{ secrets.ANDROID_KEYSTORE_UPLOAD_JKS }}

    - name: Prepare version
      run: scripts/set-version-in-pubspec.sh "${{ inputs.semver }}+${{ inputs.build_number }}"

    - name: Build bundle
      run: scripts/app.sh build android ${{ inputs.target_env }} ${{ inputs.target_env }} release
      env:
        ANDROID_NDK_HOME: ${{ steps.setup_ndk.outputs.ndk-path }}
        ANDROID_NDK_ROOT: ${{ steps.setup_ndk.outputs.ndk-path }}
        ANDROID_KEYSTORE_PATH: release.keystore
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_UPLOAD_PASSWORD }}
        ANDROID_KEY_ALIAS: upload
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_UPLOAD_PASSWORD }}
        GRADLE_OPTS: -Xmx4g -Dorg.gradle.jvmargs='-Xmx4g -XX:MaxMetaspaceSize=512m'
        JAVA_TOOL_OPTIONS: -Xmx4g

    - name: Save bundle
      uses: actions/upload-artifact@v4.6.2
      with:
        name: android-${{ inputs.target_env }}-${{ inputs.semver }}+${{ inputs.build_number }}
        path: build/app/outputs/bundle/${{ inputs.target_env }}Release
        retention-days: 1
        if-no-files-found: error
